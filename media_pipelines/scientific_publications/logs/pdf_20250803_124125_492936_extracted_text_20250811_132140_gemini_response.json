[
  {
    "text": "Characteristic spatial differences of cellular resting potential across tissues have been shown to act as instructive bioelectric prepatterns regulating embryonic and regenerative morphogenesis, as well as cancer suppression. Indeed, modulation of bioelectric patterns via specific ion channel-targeting drugs, channel misexpression, or optogenetics has been used to control growth and form in vitro, showing promise in regenerative medicine and synthetic bioengineering. Repair of defects, injury, and transformation requires quantitative understanding of bioelectric dynamics within tissues so that these can be modulated toward desired outcomes in organ patterning or the creation of entirely novel synthetic constructs. The major gap in the discovery of interventions for rational control of organ-level outcomes is the inability to predict large-scale bioelectric patterns – their emergence from symmetry breaking (given a set of channels expressed on the tissue) and their change as a function of time under specific bioelectrical interventions. It is thus essential to develop machine learning and other computational tools to help human scientists identify bioelectric states with desirable properties. Here, we tested the ability of a heuristic search algorithm to explore the parameter space of bio-electrical circuits by adjusting the parameters of simulated cells. We show that while bioelectrical space is not easy to search, it does contain parameter sets that encode rich and interesting patterning behaviors. We demonstrate proof of principle of using a computational search platform to identify circuits with desired properties, as a first step toward the design of machine learning tools for improved bioelectric control of growth and form.",
    "section": "Abstract",
    "topic": "Bioelectric signaling in regeneration",
    "chunk_summary": "Bioelectric patterns play a crucial role in morphogenesis, and computational tools are needed to predict and control these patterns for regenerative medicine and synthetic bioengineering.",
    "position_in_section": "Beginning",
    "certainty_level": "High",
    "citation_context": "Describing prior work"
  },
  {
    "text": "Morphogenesis, or the emergence of complex anatomical shapes from groups of cells, is a critically important process for three reasons. First, it is fundamental to understanding evolution, as it implements the mapping between the genome (target of mutations) and functional body phenotypes (the subject of selection forces). Second, it is central to almost all of biomedicine: being able to control what cells build is the roadmap to definitive solutions to birth defects, traumatic injury (via regeneration), and cancer (via tissue reprogramming). Finally, it is an essential aspect of synthetic bioengineering – the efforts to build biological robots and other living constructs made to arbitrary specifications for a myriad of applications. Thus, it is essential to understand and quantitatively model the patterning dynamics that occur in cellular collectives.",
    "section": "Introduction",
    "topic": "Morphogenesis",
    "chunk_summary": "Morphogenesis is crucial for understanding evolution, biomedicine, and synthetic bioengineering, requiring quantitative modeling of cellular patterning dynamics.",
    "position_in_section": "Beginning",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "Morphogenetic prepatterns occur via biochemical, biomechanical, and bioelectrical modalities. The latter is particularly interesting because, as in the brain, bioelectricity forms a kind of computational medium within which large-scale anatomical decisions are made by collective cell behavior. Bioelectric signaling includes spatial distributions of cellular transmembrane resting potentials (Vmem) across fields of tissue (Figure 1 A), produced by the actions of ion channels and electrical synapses known as gap junctions. Such voltage gradients have now been shown to encode information about organ size, axial polarity, and various cell behaviors, while disorders in bioelectric signaling induced by drugs or mutation (so-called channelopathies) can trigger cancer and birth defects. Importantly, modulation of bioelectric signaling via drugs, channel misexpression, or optogenetics has been shown to be able to induce whole organ (e.g., eye) formation, regeneration of appendages under normally non-regenerative conditions, and even the formation of head structures belonging to other species. It is clear that bioelectric computations within cell groups are an important and increasingly-tractable interface through which to control large-scale growth and form.",
    "section": "Introduction",
    "topic": "Bioelectric signaling in development",
    "chunk_summary": "Bioelectric signaling, involving spatial Vmem distributions, plays a key role in morphogenesis, with its modulation offering control over organ formation and regeneration.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "Describing prior work"
  },
  {
    "text": "One example of this kind of approach is the repair of brain defects in an amphibian model. Recent work has shown that profound defects of the brain induced by alcohol and nicotine, as well as by mutation of the critical neurogenesis gene Notch, could all be rescued by reinforcing the normal bioelectric prepattern that controls brain morphogenesis. Not only did animals regain normal brain anatomy and gene expression, but their behavioral intelligence was also returned to normal. This was accomplished by computationally modeling the ion channel circuit responsible for the bioelectric prepattern of the nascent brain, and then using that model to search for an intervention (in this case, activating the HCN2 channel) that would return the pattern back to normal. This forms a proof-of-concept for a roadmap in which bioelectric modeling is a central part of a platform that predicts electroceutical drugs for a range of biomedical indications. Importantly, the same treatment was also seen to rescue defects of the heart, face, and gut, even though bioelectric prepattern data for those organs are not yet available, reinforcing the fact that control principles may be highly conserved: cracking the bioelectric code in one context may provide actional information for interventions in others.",
    "section": "Introduction",
    "topic": "Bioelectric signaling in brain development",
    "chunk_summary": "Computational modeling of bioelectric prepatterns enables the identification of interventions, such as HCN2 activation, that can rescue brain defects and potentially other organ defects.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "Describing prior work"
  },
  {
    "text": "Thus, it becomes essential to be able to model bioelectric dynamics and to leverage those models to identify specific bioelectric perturbations (ion channel modifications using drugs or other methods). Bioelectric dynamics have been modeled using an equivalent circuit approach, as well as a more bio-realistic simulation using a tool known as Bioelectric Tissue Simulation Engine (BETSE). BETSE is a sophisticated physiological simulator which takes as input information about tissue geometry and the presence of various ion channels and gap junctions, and reveals what the bioelectric patterns will be in that tissue as a function of time. Thus, it has the potential to reveal aspects of self-organization and symmetry-breaking, which are essential to understand how complex patterns in development arise from one egg cell. It can also reveal various computations in non-neural tissue that can be exploited in the contexts of bioengineering and unconventional computing, among others.",
    "section": "Introduction",
    "topic": "Computational modeling of bioelectricity",
    "chunk_summary": "Modeling bioelectric dynamics, using tools like BETSE, is crucial for understanding self-organization, symmetry-breaking, and potential applications in bioengineering and unconventional computing.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "Describing prior work"
  },
  {
    "text": "However, bioelectric circuit function is complex, because voltage-gating of channels and gap junctions results in feedback loops and propagating dynamics within tissues. Even though every cell in a tissue can have the exact same channels (i.e., they all appear identical from a proteomic perspective), the channels open and close dynamically forming rich behaviors that generate order and spatial fluctuations. Thus, it is not possible to readily intuit the kinds of initial conditions or perturbations that will result in a specific outcome pattern: computational tools are needed to help scientists solve the inverse problem of predicting which kinds of ion channel properties in a field of cells will give rise to a desired Vmem pattern. There are major gaps in the current ability to predict bioelectric patterns and their temporal evolution in tissue. Moreover, it is not known what kinds of patterns typical bioelectric circuits can form – what are the possible behaviors to be found in the space of all possible bioelectric circuits? While chemical reaction-diffusion systems have been studied extensively, it is not clear what the computational and functional capabilities of bioelectric circuits are. To address these questions, here we undertake two main aims. First, we begin the development of tools for the bioinformatics of form, using techniques from machine learning to help discover conditions for bioengineering/biomedical settings. Second, we start mapping out the phenotypic bioelectrical space to construct an ontology of the kinds of patterns that bioelectric circuits can establish, facilitating the study of the emergence of complex bioelectric behaviors from a homogenous initial state.",
    "section": "Introduction",
    "topic": "Challenges in bioelectric pattern prediction",
    "chunk_summary": "The complexity of bioelectric circuits necessitates computational tools to solve the inverse problem of predicting ion channel properties for desired Vmem patterns, and to explore the space of possible bioelectric circuit behaviors.",
    "position_in_section": "End",
    "certainty_level": "High",
    "citation_context": "Describing prior work"
  },
  {
    "text": "Specifically, we seek to solve the inverse problem: given a (disease, or initial) state with bioelectric pattern P', and a known correct bioelectric pattern P, which native ion channel proteins should be opened and closed in order to convert P' into P? Once this is known, existing ion channel modulation techniques can be selected that would perform the needed manipulation of the ion channels. Using BETSE, any bioelectric circuit can be simulated through time. However, it is very computationally intensive, and thus is not suited for exhaustive search. We produced a heuristic search algorithm tool to test one specific hypothesis - that distinct BETSE circuits exist, and can be found via the proposed ML approach, and that those circuits have several desirable properties: (1) self-organization, (2) robustness against transient (external) induced bioelectric perturbations, and (3) memory of this pattern that can be reset (permanently altered) to a different robust pattern by a specific bioelectric input stimulus. Such circuits would be important as testable models for building novel synthetic biological constructs such as biobots, and as targets for design of novel synthetic bioelectrically-controlled tissues.",
    "section": "Approach",
    "topic": "Inverse problem in bioelectricity",
    "chunk_summary": "The study aims to solve the inverse problem of identifying ion channel manipulations to achieve desired bioelectric patterns using a heuristic search algorithm and BETSE, focusing on circuits with self-organization, robustness, and memory properties.",
    "position_in_section": "Beginning",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "Within BETSE, cells are represented as shown in Figure 1 B, and simulations can be done of multicellular tissues that express specific complements of ion channels and pumps, with specific properties. Moreover, BETSE allow us to use external or internal interventions (mimicking drug or optogenetic stimuli) that interact with the ion channels, extra cellular substances, voltage interventions or gap junction of the cells in the simulated tissue (see Figure 1 C).",
    "section": "Approach",
    "topic": "BETSE simulations",
    "chunk_summary": "BETSE simulates multicellular tissues with specific ion channels and pumps, allowing for external/internal interventions mimicking drug or optogenetic stimuli.",
    "position_in_section": "End",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "The work done in this paper uses two different programs: the tissue simulation program and the heuristic search program. BETSE (BioElectric Tissue Simulation Engine, https://github.com/betsee/betse) is an open-source cross-platform discrete exterior calculus simulator for 2D computational Multiphysics problems in life sciences (developed by Alexis Pietak at the Allen Discovery Center at Tufts). BETSE simulates the interaction of cells in a tissue and takes into account the electro-diffusion, electro-osmosis, galvanotaxis, voltage-gated ion channels, gene regulatory networks, and biochemical reaction networks (e.g., metabolism). Our heuristic search uses our own flavor of genetic algorithms that are tuned specifically to run efficiently on High-Performance-Computer (HPC) clusters (see Figure 2 A and B) to find the relevant parameter for our tasks.",
    "section": "Methods",
    "topic": "BETSE and Heuristic Search Algorithm",
    "chunk_summary": "The study utilizes BETSE, a 2D Multiphysics simulator for bioelectric tissues, and a custom genetic algorithm designed for HPC clusters to search for relevant parameters.",
    "position_in_section": "Beginning",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "A genetic algorithm is a heuristic stochastic exploration method that uses partial information to optimize a desired fitness function. The algorithm takes inspiration from the Darwinian natural selection process and uses similar operators – such as Selection, Mutation, and Crossover - to explore a large space of possibilities. Here, the genes in the genetic algorithm serve as the parameters for the experimental configuration test of the BETSE simulator. The genetic algorithm performs parameter tuning of the gene based on our fitness function, which we set for each task below. The genetic algorithm is composed of multiple agents that share a gene pool, run simultaneously, and tune asynchronously. The genetic algorithm works as follows: its main program starts by creating the gene pool by choosing a random set of parameters, and then spawns the agents. Each agent is an independent process that performs an endless loop: selecting a new gene, running BETSE, and evaluating the result. Each looping agent process starts by selecting sets of genes from the gene pool, performing Crossover and/or Mutation, and thereby creating a new set of genes (offspring). Then the agent evaluates the offspring by running BETSE, and then runs the fitness function against the BETSE results. Each agent evaluates whether its resulting gene fitness score is better than any other gene in the population. Depending on the fitness score, if any one of the genes in the population ranks lower than the agent's fitness score, the agent replaces the lowest fitness score with its own, thus improving the fitness score of the general population.",
    "section": "Methods",
    "topic": "Genetic Algorithm",
    "chunk_summary": "A genetic algorithm, inspired by natural selection, is used to tune BETSE parameters based on a fitness function, with multiple agents exploring and improving the gene pool.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "The population (gene pool, see Figure 2 D) contains all the genes in the population and their fitness score. The gene pool is shared between all agents and is used by the selection process in each running agent. Each genome in the population contains a set of 33 genes corresponding to the parameters of our task. Each one of the 33 genes specifies a number between 0 to 1, and the metadata on each gene is stored separately. The metadata of the genes is the effective range of each parameter, as well as some other properties relevant to the parameter (e.g., “round 19” means that genes that are represented by a 64-bit floating point number will be rounded to 19 digits). The genetic search algorithm tries to explore this 33-dimensional space to maximize the fitness score of the given task.",
    "section": "Methods",
    "topic": "Genes and Population",
    "chunk_summary": "The gene pool, shared by all agents, contains 33 genes representing parameters, each ranging from 0 to 1, with metadata defining their effective range and properties.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "The genetic algorithm uses genes to represent the parameters in the system. To operate on those genes the algorithm employs operators similar to those found in Darwinian natural selection. In natural selection, the population represents the most successful candidates of the previous generation, and the next generation is created from the candidates with the preferred traits. The genetic algorithm (see Figure 2 C) operates as follows: To create the new offspring, it first needs to select a couple of gene strains from the gene pool. Depending on the diversity of the gene pool, the algorithm selects either the Crossover operation or the Mutation operation. If the diversity of the gene pool is low, the chances of choosing Crossover are reduced, since crossover between similar genes does not contribute much to the guided search. In any case, if Crossover has been selected, there is still a 50% chance that mutation can occur on the gene that results from the Crossover operation.",
    "section": "Methods",
    "topic": "Genetic Algorithm Steps",
    "chunk_summary": "The genetic algorithm uses selection, crossover, and mutation operators to create new offspring, with crossover less likely when gene pool diversity is low.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "The first step of the agent is to select parents to create offspring. The agent can choose one, two, three, or four candidates to serve as a baseline from which to create the offspring. The Selection process uses weighted random selection to choose suitable candidates from the population (see Figure 2 D) based on their fitness scores. This method tends to increase the percentage of “better-fit” genes in the gene pool. The weighted random formula uses a normalized population fitness score according to the following pseudo-code:\n\npopulationFitnesScoread1 = (populationFitnesScore - min(populationFitnesScore))\npopulationFitnesScoread2 = populationFitnesScoread2 + mean(populationadı)\nWeighted populationFitnesScore = populationFitnesScoread2 / Σ=n populationFitnesScoread2 i\n\nThe weighted score of the population is used as a discrete probability distribution for the random function that chooses the candidates for the next operation (Crossover or Mutation).",
    "section": "Methods",
    "topic": "Selection",
    "chunk_summary": "The selection process uses weighted random selection based on fitness scores to choose parent candidates for creating offspring, favoring \"better-fit\" genes.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "Given the parents' gene vectors from the Selection process, the Crossover process merges random parts of each parent to create the offspring vector. Crossover starts by randomly selecting (via uniform distribution) a set of pivot points where the vector merge starts (see Figure 2 E). The Crossover operation can use two or more candidates in order to create offspring. The number of pivot points that can be chosen by the Crossover operation can vary from 1 to gene length – 1, and will depend on the mutation rate, a variable set by the user. The result of this operation is a strain of gene that shares many parts with its parents, each parent having contributed different gene strains with their own unique features.",
    "section": "Methods",
    "topic": "Crossover",
    "chunk_summary": "Crossover merges parts of parent gene vectors at random pivot points to create offspring, with the number of pivot points depending on the mutation rate.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  },
  {
    "text": "The input for the Mutation operation can come from the Selection operation or the Crossover operation. In either case, depending on the mutation rate, the Mutation algorithm chooses one or more genes to be mutated. Each chosen location is added or subtracted from a random number between 0 to 1 and multiplied by the mutation rate variable (Figure 2F).",
    "section": "Methods",
    "topic": "Mutation",
    "chunk_summary": "Mutation randomly alters one or more genes based on the mutation rate, with changes applied to genes selected from either the selection or crossover output.",
    "position_in_section": "Middle",
    "certainty_level": "High",
    "citation_context": "None"
  }
]