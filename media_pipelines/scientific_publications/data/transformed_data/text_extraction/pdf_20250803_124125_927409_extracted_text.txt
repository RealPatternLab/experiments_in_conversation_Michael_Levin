Scale invariant robot behavior with fractals
Sam Kriegman¹, Amir Mohammadi Nasab², Douglas Blackiston³, Hannah Steele²,
Michael Levin³, Rebecca Kramer-Bottiglio², Josh Bongard¹
¹University of Vermont, ²Yale University, ³Tufts University

[PAGE 1] ABSTRACT
Robots deployed at orders of magnitude different size scales, and that retain the same desired behavior at any of those scales, would greatly expand the environments in which the robots could operate. However it is currently not known whether such robots exist, and, if they do, how to design them. Since self-similar structures in nature often exhibit self-similar behavior at different scales, we hypothesize that there may exist robot designs that have the same property. Here we demonstrate that this is indeed the case for some, but not all, modular soft robots: there are robot designs that exhibit a desired behavior at a small size scale, and if copies of that robot are attached together to realize the same design at higher scales, those larger robots exhibit similar behavior. We show how to find such designs in simulation using an evolutionary algorithm. Further, when fractal attachment is not assumed and attachment geometries must thus be evolved along with the design of the base robot unit, scale invariant behavior is not achieved, demonstrating that structural self-similarity, when combined with appropriate designs, is a useful path to realizing scale invariant robot behavior. We validate our findings by demonstrating successful transferal of self-similar structure and behavior to pneumatically-controlled soft robots. Finally, we show that biobots can spontaneously exhibit self-similar attachment geometries, thereby suggesting that self-similar behavior via self-similar structure may be realizable across a wide range of robot platforms in future.

[PAGE 1] I. INTRODUCTION
Fractals are ubiquitous in nature and increasingly prevalent in artificial structures [6, 27]. Coastlines, rivers, and trees all exhibit self-similar structures—accurate replicas of themselves within themselves. Fractals are also prevalent across length scales in animals and cellular structures: respiratory and vascular systems, brains [14], and DNA [20] all exploit space-filling fractal networks. At the largest known length scale, the universe itself consists of a fractal clustering of spiraling galaxies [36]. However, the ways in which fractals may be useful in robotics is mostly unexplored.

One desirable property of fractals derives from their ability to represent infinite complexity within a compact representation: a simple rule applied to itself, recursively. Hornby and Pollack [9] exploited this phenomenon in robotics by evolving branching kinematic chains in simulation and then building physical instances of the most promising designs [10]. The resulting robots yielded an order of magnitude more physical elements than any other simulated robots at that time: Whereas Sims [32] and Bongard and Pfeifer [3] evolved simulated robots composed of no more than 14 and 50 parts, respectively, Hornby and Pollack [9] utilized Lindenmayer-systems [21] to produce branching structures of up to 350 parts.

The ubiquity of self-similar forms in living systems suggests that fractals may confer adaptive benefits in addition to reduced descriptive complexity, which could be useful in artificial systems such as robots. One such potential use of fractals in robotics is that self-similar structure can, in some cases, result in self-similar behavior [13]. Branching arteries and capillaries maximize efficient blood flow at the macro and micro scales, respectively [24]. In the gecko, nanoscale spatulae branch from microscale setae, which in turn branch from toes, which in turn branch from feet, and together maximize the probability of adhesion of spatulae, setae, toes, and ultimately the animal itself to vertical surfaces [1]. However, with the exception of artificial gecko feet [37] and Moravec and Easudes' hypothetical trillion-fingered Bush Robot [25], this particular property of fractals remains unexplored in robotics. Here, we explore whether self-similar structure can confer self-similar behavior in modular robots.

[PAGE 2] Conventional robots contain numerous smaller components (legs, wheels, end effectors, servomotors, sensors, battery packs) but these parts are highly specialized, interdependent, and incapable of independent or self-similar behavior. Modular robots differ in that they consist of repeated robotic elements that are to some degree self-sufficient, able to behave and survive on their own. They often autonomously detach, move about each other, and reattach to reconfigure the robot's overall geometry [11, 26, 28]. But robot modules tend to be cubes or other simple geometries that do not reprise the shape of the whole robot, unless the robot's overall structure is also a simple geometry (e.g., a cube of cubes). In all cases, the target behavior of a module is, by design, different from that of the whole robot.

Swarms of hundreds or thousands of individual robots have loosely coupled to form amorphous phototatic aggregates [18] or moved within a shared shell [30]; however, these robots have largely been restricted to cylindrical geometries and 2D interaction in-plane [29]. Most robot swarms comprise rigid-bodied electromechanical robots which, in order to be produced in large quantities, are designed to be as simple as possible. A consequence of this is that each robot may be more or less behaviorally static (functionless) in isolation [18, 30]. Here, we test whether self-similar forms can facilitate the evolution of scale invariant behavior as follows. Shapes of basal robots (e.g., Fig 1a) are evolved in a voxel-based simulation; each design can be composed with copies of itself, using the same pattern, indefinitely to realize self-similar form at a range of size scales. However, if the desired behavior is lost and needs to be relearned de novo at each level of recursion, then training such a system to operate on more than one size scale becomes computationally infeasible. Thus, an evolutionary algorithm is here employed to find behaviorally scale-invariant fractal robots: they must demonstrate similar behavior, normalized for scale, at three different size scales. The results demonstrate that robots with this property can be automatically designed and, in some cases, manufactured in reality.

In the first attempts to transfer simulated scale invariant behavior to a physical system, computer-generated mold designs were 3D printed and then used to rapidly fabricate identical, hollow elastomeric modules that can be de/pressurized to induce volumetric actuation [17]. Modules behaved in isolation and together when attached to form a fractal soft robot.

Scale invariant fractal design principles could also provide novel solutions to challenges facing in vitro bioengineering. One such challenge is the size limit of biobots without vascular systems in which diffusion does not bring sufficient oxygen and other key metabolites beyond approximately 1 mm. As proof of principle, we show that “xenobots” (motile biological machines built from amphibian stem cells [2, 16]) can be mechanically joined, forming permanent multi-individual subunits that do not need vascular systems because they always keep their cells close to an interface with a nutrient medium. These subunits can then be stacked and multiplexed to form increasingly large fractal biobots.

[PAGE 2] II. METHODS

[PAGE 2] A. Fractalizing robots.
Robots in this paper are modeled as polycubes with at most *e* cubes (voxels) connected face-to-face inside a bounding box with length *m* voxels. A fractal aggregation is made by replacing each voxel in a basal robot with a copy of itself. This operation can be repeated (to form an aggregate of aggregates of elements) either recursively—replacing voxels with the current aggregate—or iteratively—replacing voxels with the basal robot. We use iteration here to achieve additional size scales with fewer elements. However, the results of this paper are not reliant on the distinction between recursion and iteration.

The Menger sponge provides a familiar example (Fig 2). A basal sponge is a box, *m* = 3 voxels in length, with a hole through the center of each plane. Replacing each of the *c* = 20 voxels within a basal sponge generates a fractal sponge of 20 sponges. Repeating this operation a second time generates a sponge of 20 sponges composed of 20 smaller sponges (400 sponges in total). And so on.

The Menger sponge has Hausdorff dimension:

*H* = log<sub>*m*</sub>(*c*) = log *c* / log *m* = log 20 / log 3 ≈ 2.727, (1)

[PAGE 3] which describes the space filled by a fractal geometry in the limit. The Hausdorff dimension is zero for a single voxel; one for a column of three voxels (log<sub>3</sub>(3) = 1); two for a 3-by-3 plane of nine voxels (log<sub>3</sub>(9) = 2); and three for a 3-by-3-by-3 cube of 27 voxels (log<sub>3</sub>(27) = 3). The design space here spans these (smooth) structures and many more in between. Since all fractals here have *m* = 3, *H* ∝ log *c*.
Hausdorff dimension provides an interpretable measure of the structural complexity (or “roughness”) of the robots evolved in this paper. It will allow us to analyze how fractals with scale invariant behavior can emerge from initially random fractals over evolutionary time.

[PAGE 3] B. Simulating fractal robots.
Voxels are simulated by a point mass and up to six Euler-Bernoulli beams connecting to neighbors on each voxel face. There are two kinds of voxels (red and blue) which actuate in antiphase. Volumetric actuation is implemented by treating the beams as pistons and adjusting their rest length at every time step according to a sine wave with a phase shift stored at each voxel. A given voxelyzed robot can be fractalized by replacing each voxel with a copy of the entire robot, just like the Menger sponge.

To simulate the high mechanical resolution of fractal robots, we used voxcraft-sim [22], a GPU-accelerated re-implementation of Voxelyze [8]. In Voxelyze, voxels are evaluated sequentially on a single thread of a CPU, one after another. In voxcraft-sim, voxels are evaluated concurrently on GPUs. Collisions in Voxelyze are resolved in a double loop of all *n* surface voxels, with time complexity O(*n*²). In voxcraft-sim, collisions are handled using a bounding volume hierarchy tree [12] with O(*n*log*n*).

The basic simulated elements of Voxelyze and voxcraft-sim are the same (beams and masses), but computing dynamics in parallel and handling collisions with a BVH tree makes it possible to simulate geometrically interesting robots with complicated surface areas that self-collide. Here, evolution operates in a 27³ voxel workspace (up to 19,683 total voxels). Due to past computational limits, previous evolutionary robotics work was largely restricted to voxel workspaces with less than a thousand voxels. The lone exception was Hiller and Lipson [7], who evolved soft robots within a 20³ voxel workspace (up to 8000 voxels). However, strong morphological convergence led to a scooting mass that filled less than a quarter of the workspace (less than 2000 voxels). Here, we demonstrate how fractals can provide a more scalable encoding.

[PAGE 4] C. Evolving fractal robots.
Encoding. Each basal robot design is generated by an evolved Composition Pattern-Producing Network (CPPN; [4, 33]). Each network “paints” a pair of floating-point values in the range [-1,1] at every (*x*,*y*,*z*) location in the 3-by-3-by-3 workspace. The first value is thresholded at 0 to determine the presence or absence of material at that point. The second is thresholded at 0 to determine the type of material (if any) at that point. The largest connected component of material output by a network (genotype) is taken to be the morphology of the basal robot (phenotype). For more details, see [16].

Fitness. Each basal robot design is evaluated three times: first alone, and then twice more in fractal aggregations of increasing size. Performance at the *i*-th size scale is measured by the net displacement *d<sub>i</sub>* the robot or aggregate traveled (measured in body lengths) at the end of the 5-second evaluation period (i.e., 25 actuation cycles at 5 Hz). A design's fitness, *F*, is taken to be the least performance achieved across the three size scales:

*F* = min(*d*<sub>1</sub>, *d*<sub>2</sub>, *d*<sub>3</sub>). (2)

[PAGE 4] Simulation hyperparameters. Actuation here occurs at 5 Hz, with amplitude *A* = ±50% resting volume. Material was simulated with 10 kg/m³ density, Young's modulus 10⁴ Pa, and Poisson's ratio 0.5. Each voxel is 1 cm in length. A Coulomb friction model is used for the surface plane. Coefficients of static and dynamic friction were 1 and 0.5, respectively. Beams and collisions are damped with ζ = 1 and 0.8, respectively.

Algorithm hyperparameters. Populations of CPPNs were evolved with “age protection” [31], an additional selection pressure that maintains diversity by relaxing competition on newer genetic lineages. A randomly generated CPPN, with age 0, is injected into the population at every generation. Mutations add/remove/modify vertices and edges within a selected network. The activation functions at each vertex are randomly chosen from the following functions: sine, absolute value, square, square root, and a step function. For more details, see [16]. The radial distance from the center of the workspace and a bias of 1 were also input to each network, in addition to Cartesian coordinates *x*,*y*,*z*.
Source code can be found at fractalrobots.github.io/code.

[PAGE 4] D. Manufacturing fractal robots.
Previous work [15, 17] used a rotational molding technique to fabricate hollow cubic silicone modules (physical voxels) as building blocks of pneumatic robots. Here, we introduce a molding technique, which reduces the weight of silicone required for module fabrication and allows for the creation of custom-shaped basal modules.


[PAGE 5] Evolved fractal robots were fabricated using Dragon Skin 10 Slow in a multistep molding and assembly process (Fig. 5). Two rigid molds for casting were 3D printed. The outer mold was treated with a release agent (Ease Release 200), half-filled with silicone, and then degassed in a vacuum oven at room temperature for 5 min. Next, the inner mold was treated with release agent and inserted into the outer mold. Four flanges on four sides of the inner mold ensure that it remains centered with a 2 mm clearance from the outer mold. Silicone was then allowed to cure in an oven at 60°C for 75 min.

Once cured, the module was removed from the mold, flipped over, and placed on a draw-coated layer of uncured silicone with 2 mm thickness to seal its top side. A hole was poked into one of the side walls of the module, and a rubber tube was inserted and glued with Sil-Poxy to create the basal robot.
To assemble a fractal aggregation, single modules were attached to each other using silicone elastomer as a bonding agent. Finally, holes were punched in the side walls of the adjacent modules located in each horizontal plane. This allows groups of modules within the same plane to be pressurized by a single air inlet. For example, the robot in Fig. 1g,h has two groups of modules in the lowest horizontal plane (two “feet”), one group of modules in the middle plane, and one group on the highest plane, requiring just four independent air inlets instead of 18. Once assembled, robots were placed on top of a sheet of ABS Plastic (MyStudio MS20CYC Background Cyclorama), which was covered in cornstarch (Argo®, ACH Food Companies, Inc.) to reduce the friction between the silicone body of the robot and the plastic substrate [17].

[PAGE 5] E. Culturing fractal biobots.
Living biobots, called xenobots [16], were produced using two methods. In the first, the animal cap of *Xenopus* embryos (Nieuwkoop and Faber stage 10) were removed using surgical forceps and cultured in a mild saline solution (0.75× Marc's Modified Ringers [MMR], pH 7.8) for 24 hours at 14°C. Individuals do not naturally adhere to each other but can be induced to do so via wounding the outer surface with forceps. Following injury, individuals are manually held together for five seconds, after which they heal together permanently.

For the second method, animal cap tissue is harvested from *Xenopus* embryos as above and moved to a calcium/magnesium-free dissociation media. This solution allows the pigmented outer layer of cells to be separated and discarded, leaving the white inner layer, which forms spheroids.


[PAGE 5] RESULTS
Simulated fractal robots.
Ten independent evolutionary trials were conducted, each starting from a different set of random initial conditions. Basal robots were evolved inside a 3-by-3-by-3 voxel workspace (*m* = 3) using up to *c* = 27 voxels, which are each 1 cm in length. Basal robots were recursed twice to yield 9-by-9-by-9 (up to 729 voxels) and 27-by-27-by-27 (up to 19,683 voxels) fractal robots.
Each trial used 8 NVIDIA Tesla V100s. No trial took less than 40 hours or more than 43 hours to complete 325 generations of evolution. Each generation consisted of 48 simulations (16 designs in the current population, each evaluated at three size scales), for a total of 325 × 48 = 15,600 design evaluations per trial.

Scale invariant behavior. Fig. 6 shows evolutionary improvement occurring on all three size scales. Usually (but not always), the largest fractals (27 cm) generated less forward movement than the middle (9 cm) and basal (3 cm) scales, as evidenced by the low orange and blue curves in Fig. 6. There was not a significant difference in performance between the middle (9 cm) and largest (27 cm) size scales. Because fitness is driven by the size scale with the worst performance (Eq. 2), after ~50 generations of evolution, there seems to be, on average, little to no selection pressure on the performance of the basal and middle fractal scales. This can be seen to some extent in the aggregate curves of Fig. 6. Whenever one of the curves drops in performance over successive generations, the average improvement in scale invariant behavior was driven by another size scale. The largest fractal scale more consistently trends upward in performance, relative to the middle and basal fractal scales. This is likely due to the increased mass, but fixed elastic modulus and actuation amplitude, of the robot at larger fractal scales.

Evolved fractals. The confidence bands visible in Fig. 6 indicate that evolution did not converge to a single fractal design across the ten trials. The diversity of form can be seen in the four evolved robots drawn in Fig. 4 at the three fractal scales. These four robots have interesting roughness: fractal geometries that fill much more than a 2D plane but less than a full 3D cube. Their roughness is formally measured by their Hausdorff dimension (Eq. 1), which is plotted over evolutionary time in Fig. 8. Early in evolution, there were some full cubes (*H* = 3). At the end of evolution, there were five full planes (*H* = 2) and five designs with more roughness (2.5 < *H* < 2.7). As the basal shape changes in each column of Fig. 4, so too does the distribution of performance at each size scale. For some shapes, performance was highest at the smallest fractal scale (Fig. 4a,c). For others, performance was highest at the middle fractal scale (Fig. 4b,d). Some have more uniform performance across size scales (Fig. 4b,c). Others have one size scale in which performance is two or three times as high as their next best (Fig. 4a,d).

Comparison to non-fractals. To determine how much (if at all) fractals aid the evolution of scale invariant behavior, we compared against an otherwise equivalent algorithm that freely combines 3 cm basal robots into any aggregate structure within a 9 cm² bounding box, without imposing self-similarity. At the third fractal size scale, aggregates are freely combined within a 27 cm² bounding box to form an aggregate of aggregates of basal robots. Because we removed the assumption of self-similarity, some rule must be introduced to orchestrate aggregation at every size scale. Because additional selection pressures are necessary to induce modularity in separate outputs of the same CPPN [5], we here use three independent CPPNs to dictate the shape at the three size scales.
Note that if modularity was not artificially induced, then the aggregation strategies produced by a single CPPN would, by default, be strongly correlated, yielding fractals and thus defeating the purpose of this control experiment. However, fractals can emerge spontaneously under these conditions if the independent CPPNs converge to identical aggregation functions that mirror the basal robot's internal voxel structure.
The behavior of a random nonfractal robot (before evolution) can be seen here. The results after evolution indicate that searching for multiple aggregation policies, even just at two size scales, can significantly slow the evolution of scale invariant behavior compared to assuming fractality (Fig. 7).

Transferal to reality. Two additional evolutionary trials were conducted. In the first, we used phase-shifted actuation: Instead of using cyan and red voxels that actuate in antiphase, a wave of phase-shifted actuation propagates through the body, from anterior to posterior, repeating every 0.2 seconds. This experiment was conducted a few weeks before the experiments using antiphase materials (Fig. 4). Thus, the robot with the most scale invariant behavior that evolved under these conditions (Fig. 10) was the first to be manufactured in reality (Fig. 1).
After observing the transferal of a phase-shifted actuation, a single bladder design was evolved in which all basal robots synchronized their actuation in time (zero phase-offsets across the body). The evolved single actuator fractal robot with the most scale invariant behavior was then fabricated. The winning design is shown in simulation and reality in Figs. 3 and 11, respectively.

Physical fractal robots.
The best evolved fractal robot utilizing a phase-shifted actuation (Fig. 1) was fabricated first (Fig. 5). At the basal fractal scale, the robot was actuated with ~6 kPa at a frequency of 3 Hz, and a locomotion behavior was observed similar to the prediction from simulation. At the middle fractal scale, the robot was first actuated using a cam system which was powered by a DC motor (Pololu 131:1) with a maximum rotational speed of 72 RPM and designed to operate two piston-cylinder assemblies (Clippard Inc.) for pressurizing/depressurizing the robot. This design led to a controlled actuation of the robot with maximum ~4 kPa pressure at a maximum frequency of 1.2 Hz. This combination of pressure and frequency did not lead to locomotion for the robot. Due to this limitation of the cam system, a secondary testing method was also employed in which the pressure inlet was manually switched between an airline with 20 kPa pressure and a vacuum pump for 50 cycles, resulting in an average actuation frequency of 0.55 Hz. The robot was then able to locomote at the middle fractal scale, but at a much lower speed compared to the basal scale, due to hardware constraints in applying a similar combination of input pressure and actuation frequency.

The best evolved single actuator fractal robot was the second design to be fabricated (Fig. 3). In the single actuator case, scale invariant behavior successfully transferred: the physical robot behaved similarly at the basal and middle fractal scales. However, the direction of the robot's movement did not match the prediction from simulation. We suspect that this is due to an overly simplistic (Coulomb) friction model. Given that the direction of locomotion for soft robots can be reversed by tuning the tribological properties of the surface plane [23], future work should either modify the simulator or the physical surface on which the robot operates, or both.


[PAGE 7] Living fractal biobots.
In Fig. 9, living xenobots [16] were formed from amphibian stem cells harvested from embryos of the African clawed frog *Xenopus laevis*. The apical surface of individual spheroids are not naturally adherent to neighbors; however, following mechanical laceration with microsurgery forceps, individuals can be attached to one another during the healing process. This attachment is stable (connected members can be pushed with forceps or moved via pipetting without detaching) and permanent, although members can be manually decoupled through bisection with forceps or a scalpel.

If the pigmented outer epidermal layer is removed during construction, the resultant biobot is naturally adherent to neighbors through contact, allowing for the rapid connection of many individuals. Long-term stability is less using this construction method, as the increased adherence can result in neighbors fusing into one large spheroid. Future work would allow these connected systems to be stacked vertically, creating three-dimensional fractalized designs.

[PAGE 7] DISCUSSION
In this paper, scale invariant robot behavior was achieved using fractals. The results demonstrate that, under certain conditions, the nonrandom behavior of a single robot can be preserved when connected with copies of itself fractally.

[PAGE 9] REFERENCES (Included from both extractions, formatting adjusted for readability)
[1] - ...
[2] - ...
[3] - ...
[4] - ...
[5] - ...
[6] - ...
[7] - ...
[8] - ...
[9] - ...
[10] - ...
[11] - ...
[12] - ...
[13] - ...
[14] - ...
[15] - ...
[16] - ...
[17] - ...
[18] - ...
[19] - ...
[20] - ...
[21] - ...
[22] - ...
[23] - ...
[24] - ...
[25] - ...
[26] - ...
[27] - ...
[28] - ...
[29] - ...
[30] - ...
[31] - ...
[32] - ...
[33] - ...
[34] - ...
[35] - ...
[36] - ...
[37] - ...
[38] - ...