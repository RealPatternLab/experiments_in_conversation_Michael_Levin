Neuroevolution of decentralized decision-making in N-bead swimmers leads to scalable and robust collective locomotion

Many microorganisms swim by performing larger non-reciprocal shape deformations that are initiated locally by molecular motors. However, it remains unclear how decentralized shape control determines the movement of the entire organism. Here, we investigate how efficient locomotion emerges from coordinated yet simple and decentralized decision-making of the body parts using neuroevolution techniques. Our approach allows us to investigate optimal locomotion policies for increasingly large microswimmer bodies, with emerging long-wavelength body shape deformations corresponding to surprisingly efficient swimming gaits. The obtained decentralized policies are robust and tolerant concerning morphological changes or defects and can be applied to artificial microswimmers for cargo transport or drug delivery applications without further optimization "out of the box". Our work is of relevance to understanding and developing robust navigation strategies of biological and artificial microswimmers and, in a broader context, for understanding emergent levels of individuality and the role of collective intelligence in Artificial Life.

Microorganisms are ubiquitous in nature and play an essential role in many biological phenomena, ranging from pathogenic bacteria affecting our health to phytoplankton as a key player in the marine ecosystem on a global scale. A large variety of microorganisms live in viscous environments, and their motion is governed by the physics of low Reynolds number hydrodynamics, where viscous forces dominate over inertia. As a consequence, a common strategy is to periodically deform their body shape in a non-reciprocal fashion to swim. To thrive in the environment, they have developed different tailored strategies to exploit their swimming capabilities, such as actively navigating toward a nutrient-rich source, hunting down prey, escaping predators, or reproducing. Besides being of direct biological relevance, understanding the corresponding navigation strategies of microorganisms bears potential for biomedical or technical applications, potentially utilized by synthetic microswimmers deployed as targeted drug delivery systems.

Nature has evolved many different strategies and control mechanisms for microswimmers to swim fast, efficiently, and adaptive to environmental conditions: For example, swimming algae cells or sperm cells move with the help of waving cilia or flagella, respectively, or amoebae such as Dictyostelium and unicellular protists such as Euglena by deforming their entire cell body. The associated deformation amplitudes and wavelengths can be on the order of the entire size of the organism.

In the last years, Reinforcement Learning (RL) has been applied to understand navigation strategies of microswimmers, for example under external fluid flow or external fields, or to perform chemotaxis in the presence of chemical gradients. So far, most of these studies treat microswimmers as rigid agents, i.e., explicitly omitting body deformations or other internal degrees of freedom, and simply manipulate their ad hoc swimming speed and rotation rates for control purposes to perform well in a particular environment. Only very recent contributions consider the constraints of physically force-free shape-deforming locomotion of plastic model microswimmers in an effort to identify swimming gaits that explicitly utilize the hydrodynamic interactions between different body parts in a viscous environment. Modeling such a body-brain-environment offers explicit and more realistic behavior of the response of an organism to environmental conditions.

The locomotion of microswimmers and microrobots moving in viscous fluids at low Reynolds numbers can be modeled with various numerical methods of different accuracy. Examples for actively deforming slender filaments as they occur in biological systems or in soft robotics are slender body theory (e.g., ref. 32), or Cosserat rod models (e.g., refs. 33,34). Yet the simplest models, which usually outperform the aforementioned methods in terms of computation time, discretize a filament or a microswimmer by interconnected beads where hydrodynamic interactions are captured in the far-field limit, such as in the Oseen or Faxén approximation. These models are particularly useful for Evolutionary Algorithms (EAs) in RL, which rely on the efficient simultaneous simulation of a whole population of microswimmers.

A prominent and very simple and efficient model that has frequently been investigated with RL techniques is the (generalized) Najafi-Golestanian (NG) microswimmer, typically consisting of N = 3 (or more) concentrically aligned beads immersed into a viscous environment. Such a composite N-bead NG microswimmer can self-propel via non-reciprocal periodic shape deformations that are induced by coordinated time-dependent periodic forces applied to every bead, which sum up to zero for force-free microswimmers. Conventional strategies to describe the autonomous locomotion of a microswimmer consisting of hydrodynamically interacting beads utilize a centralized controller that integrates all the information about the current state of the microswimmer in its environment (comprising internal degrees of freedom and potential environmental cues such as chemical field concentrations). As such, it proposes control instructions for every actuator in the system, thereby inducing dynamics, i.e., body deformations, that are most optimal for a specific situation given a particular task. To substitute and mimic the complex and adaptable decision-making machinery of biological microswimmers, such controllers are often realized by trainable Artificial Neural Networks (ANNs).

Centralized decision-making relies on the (sensory) input of all individual body parts of a composite microswimmer, i.e., quantities such as the relative positions, velocities, or other degrees of freedom for all N beads, and the corresponding control actions target all system actuators, i.e., what forces to apply to every one of the N beads. While the number of trainable parameters of a controller ANN scales at least quadratically with the number of beads N, the number of possible perceivable states and controlling actions scales in a combinatorial way with the number of degrees of freedom of the sensory input and the action output. This not only immensely complicates deep-learning procedures but essentially renders exhaustive approaches infeasible given the vast combinatorial space of possible input-output mappings for large N. Thus, while generalized NG swimmers with N≥3 have been successfully trained to perform locomotion or chemotaxis tasks, they have been limited to a relatively small number of body parts, i.e., a small number of degrees of freedom, N≤10, so far.

However, even unicellular organisms are fundamentally made of (many) different parts, which (co-)operate in a seamlessly coordinated way: in biological microswimmers, for example, collective large body deformations are typically achieved through orchestrated and cooperative action of molecular motors and other involved proteins, inducing, e.g., the local deformation of the cilia-forming axoneme via localized contractions and extensions. Consequently, such organisms—without an apparent centralized controller-cooperatively utilize their body components in a fully self-orchestrated way in order to swim by collectively deforming and reconfiguring their body shape. For example, the periodically deforming shapes of eukaryotic flagella are not designed or pre-defined by cellular signals, but are an emergent property of the specific local forces applied by the molecular motors on the filament. Moreover, such decentralized navigation policies tend to be robust and failure-tolerant with respect to changing morphological or environmental conditions, e.g., if parts of the locomotive components are disabled or missing, or unforeseeable situations are encountered. Strong signs of such generalizing problem-solving skills are observed, for example, in cells, slime molds, and swarms, and, as recently suggested, this fundamental ability of biological systems to self-organize via collective decision-making might be the unifying organizational principle for integrating biology across scales and substrates. Thus, the plastic and functional robustness and the innate drive for adaptability found in biological systems might not only further robotics but facilitate unconventional forms of computation based on collective intelligence.

So far, it remains unclear how decentralized decision-making in a deformable microswimmer can lead to efficient collective locomotion of its body parts. We thus investigate biologically motivated decentralized yet collective decision-making strategies of the swimming behavior of a generalized NG swimmer, serving as a simple model system for, e.g., a unicellular organism, or a controllable swimming microrobot. Optimizing collective tasks in systems of artificial agents, such as collectively moving composite (micro)-robots, can be addressed with Multi-Agent Reinforcement Learning (MARL). Typically employed concepts such as Centralized Training with Decentralized Execution (CTDE) often rely on the usage of overparameterized deep neural networks and complex information sharing across agents during training. In contrast to conventional MARL we employ here a recently developed method which utilizes EAs to optimize lean decentralized control policies based on collective performance quantified by a global fitness signal (i.e., without the need for local credit assignment). Such collective agents have a topology reminiscent of Neural Cellular Automata (NCAs), where all distributed agents share the same ANN architecture while exchanging low-bandwidth information between neighbors on the grid of a cellular automaton to update their states and hence the collective behavior in the problem domain; here, the beads of a generalized NG swimmer will be treated as the cells of an NCA which will learn to coordinate locally to exert non-reciprocal bead-specific forces to propagate the collective microswimmer body. Furthermore, in our approach, we are able to overcome earlier limitations by extending our swimmers to much larger N than previously feasible, allowing us to identify locomotion strategies in the limit N→∞. To this end, we interpret each bead of the microswimmer's body as an agent that can only perceive information about its adjacent beads and whose actions induce contractions or extensions of its adjacent muscles. We substitute the internal decision-making machinery of such single-bead agents with ANNs and employ genetic algorithms and neuroevolution to machine learn optimal policies for such single-bead decision-making centers, such that the entire N-bead swimmer can efficiently self-propel collectively, i.e., in a decentralized way. We show that the evolved policies are robust and failure-tolerant concerning morphological changes of the collective microswimmer and that such decentralized control—trained for microswimmers with a specific number of beads-generalizes well to vastly different morphologies.


[PAGE 2] Results and discussion

[PAGE 3] The N-bead swimmer model

Here, we investigate swimming strategies optimized by RL and the corresponding physical implications of N-bead generalized NG swimmer models moving in a fluid of viscosity μ. A swimmer consists of N concentrically aligned spheres of radius R located at positions  xi(tk), i = 1..., N, at time tk. These beads are connected pairwise by massless arms of length li(tk) = xi+1(tk) - xi(tk), as illustrated in Fig. 1a. The swimmer deforms and moves by applying time-dependent forces Fi(tk) = Fª(tk) + Fº(tk) on the beads. The active forces Fª(tk) are proposed by RL agents (see below), and passive restoring forces Fº(tk) are applied when arm lengths li(tk) becomes smaller than 0.7L0, or larger than 1.3L0, where we choose L0 = 10R as the reference arm length. The swimmer is force-free, ∑iFi(tk) = 0, and the bead velocities vi(tk) are obtained in the Oseen approximation, vi = Fi/(6πμR) + ∑j≠iFj/(4πμ|xi − xj|), (see the “Hydrodynamic interactions and numerical details for the N-bead swimmer model" subsection in the "Methods").

[PAGE 3] Modeling system-level decision-making with decentralized controllers

To identify the active forces Fª(tk) on the beads, we assign an ensemble of independent yet identical controllers to every bead which respectively can only perceive local information about adjacent beads (such as distances and velocities of their neighbors) and propose actions to update their respective states (such as proposing bead-specific forces to update their own positions). Yet, these bead-specific agents follow a shared objective to collectively self-propel the entire N-bead swimmer's body. More specifically—as illustrated in Fig. 1 and detailed in the "Artificial neural network-based decentralized controllers" subsection in the "Methods"—for each time tk the controller associated with the bead i perceives its left- and right-neighbor distances, Li(tk) = {li(tk), li+1(tk)}, and its own- and the neighboring beads' velocities Vi(tk) = {vi−1(tk), vi(tk), vi+1(tk)}. Moreover, each bead maintains an internal vector-valued state, si(tk). This state can be utilized by the respective controller to store, update, and actively share recurrent information with other beads that is not necessarily bound to the physical state of the swimmer but an emergent property of the collective RL system: Every controller thus perceives its neighboring states, Si(tk) = {si-1(tk), si(tk), si+1(tk)}, which additionally guide the agent's decision-making (see "Methods” and ref. 58 for details). In total, the perception of a single bead agent is given by pi(tk) = {Li(tk), Vi(tk), Si(tk)} and does not contain any agent-specific or global reward signals.

After integrating information about its local environment, pi(tk), the controller of each bead i computes, and then outputs an action, ai(tk) = {φi(tk), ∆si(tk)}, comprising a proposed active force, φi(tk), and an internal state update, si(tk+1) = si(tk) + ∆si(tk) (see Fig. 1b); this extends the purely state si-dependent inverse pattern formation task discussed in ref. 58 with local perception-action loops in a hydrodynamic environment. The proposed forces are limited to φi(tk) ∈ [-F0, F0] by clamping the controllers' force outputs to ±F0, where F0 sets the force scale in our system and hence the maximum power consumption and bead velocities of the swimmer.

To model a force-free swimmer, we propose two different methods of how the mapping between the proposed forces φi(tk), and the actual active forces Fª(tk), is achieved: First, we interpret the proposed forces as pairwise arm forces φi(tk) and -φi(tk) applied between two consecutive beads i and i + 1, respectively (see Fig. 2a). This leads to the actual active forces Fªi(tk) = φi(tk) - φi-1(tk) for beads i = 1..., N, where we treat the swimmer's "head" and "tail" separately by setting φN(tk) = 0 and introducing φ0(tk) = 0. This automatically ensures ∑Ni=1Fªi(tk) = 0. In this sense, the proposed actions can be understood as local decisions to expand/contract muscles between the beads where the maximum local power input on a bead is constrained and set by the value of F0. Second, we assume that the proposed force φi(tk) of every controller directly targets the actual force applied to its associated bead, but, to fulfill the force-free condition, we subtract the mean φ¯(tk) = 1/N∑Ni=1φi(tk) from every proposed force and arrive at Fªi(tk) = (φi(tk) - φ¯(tk)) (see Fig. 2b). Hence the first approach ensures the global force-free condition via a series of locally annihilating pair-forces motivated by biological force dipole generation at small scales that cause the arms between the corresponding beads i and (i + 1) to contract or extend. In turn, the second approach regularizes the forces by collective feedback (via φ¯(tk)) and can be interpreted as a mean-field approach that may be utilized by external controllers for artificial microswimmers. Henceforth, we refer to the first scenario as type A, and to the second scenario as type B microswimmers, and alike for the corresponding self-navigation strategies or policies. We note that for both type A and B microswimmers the total force per bead is constrained to Fi(tk) ∈ [-2F0, 2F0], except for the first and last bead of type A which are only connected to a single muscle such that for type A swimmers F1(tk) and FN(tk) ∈ [-F0, F0].

Following RL terminology, we refer to the mapping between perceptions and actions of an agent (or here, synonymously, a controller) as its policy, πi: pi(tk) → ai(tk). In general, such a policy is a complicated and complex function of the input, and ANNs as universal function approximators are well-suited tools to parameterize these objects for arbitrary agents and environments (see Methods). Thus, we approximate the RL agent's policy πi by an ANN, formally expressed as a function fθ(·) with parameters θ, such that ai(tk) = fθ(pi(tk)). More specifically, we treat a single N-bead swimmer as a multi-agent system, each bead being equipped with a functionally identical but operationally independent ANN-based controller, fθ(·). This renders the system reminiscent of a Neural Cellular Automaton (NCA) with the extension that the decentralized actions of all individual controllers give rise to a collective locomotion policy Π = {π1, ..., πN} ≈ {fθ(p1(tk)), ..., fθ(pN(tk))}, of the entire virtual organism (see also ref. 59). Here, only a single set of parameters θ is used for all N bead-specific agents, i.e., the same ANN controller is deployed to every bead; the states of the latter only differ in their initial conditions and subsequent input-output-history. For our purposes, this renders the optimization problem much more tractable compared to situations with a single centralized controller, Π ≈ fθ¯(p1(tk), ..., pN(tk)), especially for large swimmer morphologies.

[PAGE 4] Here, we aim at identifying optimal and robust swimming gaits for arbitrarily large N-bead swimmers, which translates to finding suitable ANN parameters, θ(opt), such that the bead-specific perception-action cycles, ai(tk) = fθ(opt)(pi(tk)), collectively self-propel the multi-agent system efficiently in a certain direction. More specifically, the set of parameters θ comprises the weights and biases of the agent's ANN-based controller, which we designed to be numerically feasible for our neuroevolution approach (see below): In stark contrast to traditional RL agents, with often more than tens or hundreds of thousands of parameters, we here utilize a predefined architecture inspired by refs. 58,65 with only 59 parameters (see the "Artificial neural network-based decentralized controllers" subsection in the "Methods"). Thus, we can utilize EAs, specifically a simple genetic algorithm discussed in the “Genetic algorithm and neuroevolution of single-agent policies with collective goals" subsection in the “Methods," to adapt the ANN parameters (but not the ANN topology) such that the entire N-bead swimmer's mean center of mass (COM) velocity, vT = |1/N∑Ni=1(xi(T) − xi(0))|, is maximized for a predefined swimming duration T = 400 – 800∆t, where ∆t = 5 μR²/F0 is the time interval between two consecutive perception-action cycles of an RL agent. T is chosen sufficiently large to provide the respective N-bead swimmer enough time to approach a steady swimming state and to execute several swimming strokes, starting from randomized initial positions. Thus, we define the objective, i.e., the fitness score in terms of EAs, or the reward in terms of RL, as the mean COM velocity v = <vT>Ne, averaged over Ne = 10 statistically independent episodes, and search for θ(opt) = maxθ<v> through variation dθ of the parameters θ via EAs, as detailed in the "Genetic algorithm and neuroevolution of single-agent policies with collective goals" subsection in the "Methods".

[PAGE 4] Individual, bead-specific decisions facilitate collective swimming of an N-bead swimmer

Specifically, we deploy morphologies ranging from N = 3 to N = 100 beads of type A and B microswimmers and train every swimmer of different size N for both types independently via EAs to self-propel by maximizing their respective fitness score v. For details on the utilized ANNs and the applied EA we refer to the "Modeling system-level decision-making with decentralized controllers" subsection in the “Results and Discussion” and to the "Methods".

The training progress is presented in Fig. 1 exemplarily for type A microswimmers of different morphologies N, demonstrating that the proposed decentralized decision-making strategy is capable of facilitating fast system-level swimming gaits for all the considered swimmer sizes up to N = 100. Thus, our method removes the bottleneck for machine-learning navigation policies of large-scale microswimmers by employing computationally manageable local ANN-based perception-action loops of their bead-specific agents. To the best of our knowledge, this is the first time successful training of microswimmers with such a large number of degrees of freedom has been achieved.

[PAGE 4] Different strategies of autonomy: large-scale coordination enables fast swimming

Employing the learned policies of both type A and B microswimmers for different body sizes, i.e., the number of beads N, we determine the respective stroke-averaged COM velocities v, which increase monotonously with N as depicted in Fig. 3a, b. We normalize all velocities here with v0 = 2F0/(6πμR), i.e., the velocity of a bead dragged by an external force of strength 2F0. Type B swimmers are significantly faster compared to type A swimmers by almost one order of magnitude, especially for large N. As illustrated in Fig. 3a, for type A microswimmers with locally ensured force-free conditions, the mean COM velocity v saturates with increasing N at vmax/v0 ≈ 0.03 for N = 100. In contrast (c.f., Fig. 3b), the fastest type B microswimmer, again at N = 100, achieves a maximum COM velocity of vmax/v0 ≈ 0.15.

The insets in Fig. 3a, b illustrate results for the well-studied three-bead swimmer (N = 3). First, they show the characteristic periodic 1-step-back-2-step-forward motion of the COM trajectory. Second, the corresponding steady state phase space dynamics of the active forces on beads 1 and 3, (F1, F3), and of the arm lengths (l1, l2), reiterating the periodic motion. Note that the force on bead 2 simply follows from F2 = -F1 - F3. While both type A and B three-bead swimmers move at comparable speed, this is achieved with different policies, as can be seen by the different phase space curves (see also Supplementary Movie 1).

In Fig. 3c, d, we present trajectories of both the COM and bead-specific coordinates (top panels; respective insets emphasize the COM dynamics), and of the bead-specific proposed forces (bottom panels) for an (N = 15)-bead type A- and (N = 100)-bead type B microswimmer, respectively. These selected trajectories demonstrate the genuinely different swimming strategies for type A and B microswimmers (which have been optimized with the same EA settings).

In type A microswimmers (Fig. 3c), the pairwise arm forces induce periodic waves of arm contractions of relatively high frequency but small wavelength, which travel through and move forward the body of the N-bead microswimmer. For swimmers with a sufficiently large number of beads N this leads to a relatively smooth and linear COM motion (see inset in Fig. 3c).

In stark contrast, the fastest swimming strategies for type B microswimmers (Fig. 3d) assumes coordinated arm strokes across large fractions of their bodies, essentially contracting and extending almost the entire swimmer simultaneously, which is reflected in the oscillatory COM motion even for very large N (see inset in Fig. 3d). This large-scale coordination exceeds the capabilities of the locally interlocked policies of type A microswimmers and strikes us as an emergent phenomenon which—still based on purely local decision-making—is facilitated by the mean-field motivated feedback of the mean proposed force of all the agents in the system: type B microswimmers seemingly act as a single entity, despite the fact that the precise number of constituents, N, is not important and can vary (see also Supplementary Movies 2 and 3).

As shown in Fig. 3d, typical emergent swimming gaits of the respective type B swimmers are reminiscent of the large amplitude contraction-wave based locomotion of crawling animals such as caterpillars. Similarly, the crawling locomotion of crawling fly larvae had been optimized using RL recently. In the context of locomotion in viscous fluids, large-amplitude traveling waves along the body have been discussed as an alternative swimming strategy of flagella-less organisms.


[PAGE 5] Transferable evolved policies: decentralized decision-making generalizes to arbitrary morphologies

We have recently shown that biologically inspired NCA-based multi-agent policies, especially when evolved via evolutionary processes, can display behavior that is highly robust against structural and functional perturbations and exhibit increased generalizability, adaptability, and transferability. We thus investigate here whether our decentralized locomotion policies, which are genuinely evolved for microswimmer bodies with exactly NT beads, generalize to morphological changes. More specifically, we carefully optimize ANN policies for a particular number of NT = 3 to 100 beads (as discussed above) and deploy them—without any retraining or further adaptation—into microswimmer bodies with a different number of N = 3 to 300 beads instead to evaluate the corresponding swimming velocities for such cross-policy environments.

As illustrated in Fig. 4a, b, we find that the vast majority of all policies that are most optimal for a particular value of NT are also highly effective in self-propelling microswimmers with N ≠ NT for both type A and B, respectively. This even holds for situations where NT << N, such as NT = 3 and N = 300. We did not explicitly optimize for this property at all, but it is an emergent phenomenon of the inherent decentralized decision-making of the system. Thus, the collective nature of the proposed swimming policies renders the evolved locomotive strategies highly adaptive to morphological changes, irrespective of the specific number of beads N used during deployment. Only for a few situations which can occur when the number of beads N deviates significantly from the number of beads NT used during training do not lead to successful swimming, in particular for type B microswimmers (Fig. 4b). In those cases the locally emerging periodic arm motion is lost and the beads are trapped in a resting state.

Moreover, the set of policies evolved and deployed for different bead numbers of NT and N, respectively, allows us to estimate a trend for optimal swimming gaits for large N: In steady state, the arm-lengths li(tk) of an arbitrary trained NT-bead swimmer describe limit cycle dynamics in an (N − 1)-dimensional phase space (c.f., Fig. 3). Then, all arms oscillate at the same angular velocity ω and exhibit the same cross-correlation times τ to their neighboring arms, where li+1(tk) = li(tk - τ), and we can express each of the i = 1, ..., N arm lengths as a 2π-periodic function li^(t) = f ((t − iτ)ω + φ), with the phase shift φ defining the initial conditions; for more details about ω and τ we refer to the "Swimming-gait analysis" subsection in the "Methods”. We can also write li^(t) in the form of a wave equation as li^(t) = f (tω + 2πi/λ + φ), where the bead index i controls the “spatial” oscillations at a (dimensionless) wavelength λ = 2π irrespective of the corresponding physical bead positions xi(tk). A careful analysis of different naive block-swimmer or waveform policies in the Supplementary Note 1 suggests that the found waveform parametrization obtained by the RL procedure is close to the optimum within our model assumptions for sufficiently large microswimmers. In particular, we find that the best policies for the proposed forces for the faster, sufficiently large type B microswimmers are well approximated by φi^(t) = F0 sign [sin(ωt – 2πi/λ)]; the swimming speed is close to maximum by choosing for ω and λ the respective values obtained from our RL procedure.

In Fig. 4c, e, g, we respectively present ω¯, τ¯, and l¯ for the fastest type A microswimmers as a function of N (blue circles), additionally to the training conditions where N = NT (magenta "x" symbol). We can see that these quantities are almost independent of N, and we observe only weak logarithmic dependencies of τ and λ (see Fig. 4 caption). In contrast, for type B (see Fig. 4d, f, h), the angular velocity is approximately inverse to the swimmer length ω ~ N⁻¹, and the wavelength almost linear to N, λ ~ N (detailed fits see Fig. 4 caption). As a result, the evaluated τ¯ values for type B microswimmers (Fig. 4f) are almost constant and the values are comparable to those of the type A microswimmer, but slightly decrease with N.

[PAGE 6] Large-scale coordination leads to efficient locomotion

In our approach, we limit the maximum forces on each of the beads and, thus, the maximum bead velocities. This procedure is somewhat similar to fixing the total power consumption of the swimmer. In previous optimization procedures on 3- and N-bead swimmers commonly the swimming efficiency is optimized, where e.g., the power consumption of the entire swimmer is taken into account as a single, global quantity. In contrast, in our work, we set local constraints on the swimmer by limiting the forces on every bead. Although we hence did not optimize in our RL procedure for the hydrodynamic efficiency η of our swimmers, we measure η determined by refs. 1,75 η = 6πμReff v²/P where P = ∫∑ivi(t)Fi(t)dt is the stroke-averaged power consumption, and Reff is the effective radius of our swimmers. There is no unique way to define Reff of our swimmer (see also the discussion in ref. 75), and it is hence not straightforward to compare Reff of swimmers of different size N. We choose here Reff = NR, which approximates the combined drag on all of the spheres, neglecting hydrodynamic interactions. The power consumption is naturally limited to be P < Pmax with Pmax = 2NF0v0 = 2NF0²/(6πμR), for both cases, type A and B; F0 and v0 are the force- and velocity-scale in our model, see the "Modeling system-level decision-making with decentralized controllers” subsection in the "Results and Discussion". However, type B swimmers can exploit their higher freedom to adjust the forces on the beads compared to the arm-force-limited type A swimmer to locomote at higher speed, and hence at higher efficiency η. As seen in Fig. 5a, b for both type A and B swimmers, the efficiency increases with swimmer length N and levels off at large N. The efficiency is relatively low for all swimmer lengths N for type A swimmers, and is limited to 0.12%. In contrast, long type B swimmers can reach surprisingly high efficiencies of even ≈ 1.5% for N = 100, comparable to the efficiency of real existing microswimmers.

As discussed above, a larger microswimmer can swim faster due to the emergence of long-wavelength longitudinal waves. Indeed, it thus is not surprising that longer type B swimmers are faster than shorter ones. Animals typically scale their speed with their size. Here we determine the swimmer speed per size v/N depending on N as shown in Fig. 5c, d, where we identify a maximum for N = 4 for type A and at N = 8 for type B. Hence, these swimmers need the smallest amount of time to swim their own body size NL0 compared to swimmers of different N. For large N, v/N decays with a power law (see inset Fig. 5c, d).

[PAGE 7] Robust- and failure tolerant locomotion and cargo transport without re-training

Since our evolved microswimmer policies show strong resilience even against significant morphological perturbations (see Fig. 4), we aim to investigate this operational plasticity even further: Exemplarily for the most optimal type A and B microswimmers with (N = 13), we systematically load the arms with extra passive "cargo" beads of variable radius Rc ∈ [0, 2R], and evaluate the dynamics of the corresponding loaded microswimmer consisting now of N = 13 + 1 beads, without retraining or further optimization. These cargo beads can geometrically be located between two neighboring beads of the microswimmer, but remain functionally disjoint from the latter (cargo beads are not connected by arms to any body beads): when placed at an arm li, a cargo bead does not disrupt the exchange of information between the corresponding beads i and (i + 1) and thus does not affect the inputs of the respective bead-specific ANNs. Since cargo beads are passive elements, they do not propose active forces independently, Fªc(t) = 0, and are moved around solely by the hydrodynamic interaction with the other beads and the restoring spring forces of nearby beads. This ensures that a cargo bead is topologically fixed in the microswimmer's body.

Figures 6a, b demonstrates that our approach of utilizing decentralized, bead-specific controllers for N-bead microswimmer locomotion not only gives rise to highly robust self-propulsion policies (see the "Transferable evolved policies: decentralized decision-making generalizes to arbitrary morphologies” subsection in the “Results and Discussion”) but can also be used “out of the box” for cargo transport applications: We show that both type A and B microswimmers are capable of swimming while having additional cargo beads of various sizes located at different internal positions, i.e., at different arms along their main axes. While the presence of cargo beads significantly restrains the neighboring beads from adapting the adjacent arm length, essentially locking the corresponding arm, the remaining functional beads self-propel the entire microswimmer effectively. We further emphasize that, in general, the swimming speed decreases with increasing cargo size, Rc.

[PAGE 8] Next, we successively fill all arms of a single microswimmer from the left, l1, to the right, lN, simultaneously with a total number of Nc = 1, ..., (N − 1) cargo beads of equal radius Rc (one cargo per arm) and measure the speed of the correspondingly loaded (N + Nc)-bead microswimmers as a function of the number of loaded arms and cargo size. Both type A and B microswimmers are capable of transporting multiple cargo loads at once efficiently, as illustrated in Fig. 6c, d: they can carry up to ≈50-60% of their active beads N before the respective locomotion capabilities fail due to an increasing number of blocked arms. While we here fixed N = 13 to demonstrate cargo transport, it can be applied to different swimmer realizations, i.e., other morphologies and evolved policies: As shown in the Supplementary Note 2a, microswimmers of different size N display similar behavior as shown in Fig. 6 for N = 13, rendering our system highly robust against such morphological defects.

Another potential morphological malfunction in our model is corrupting the information flow between selected neighboring beads. We thus choose a number of Nd links li between different neighboring beads i, j = i + 1 (c.f., Fig. 1), and intentionally set the corresponding contributions from bead j, i's to bead i, j's perception vectors pi(tk) and pj(tk) to zero before measuring the corresponding swimming velocities of different swimmer realizations; this will affect bead i's measurements of the distance li(tk)→0, velocity vi(tk)→0, and state sj(tk)→0 of the neighboring bead j, and vice-versa (see the "Modeling system-level decision-making with decentralized controllers" subsection in the "Results and Discussion" and the "Methods"). As depicted in Fig. 7, the relative affected swimming velocity for type A and B microswimmers of size N effectively decreases linearly as a function of the fraction of blocked links Nd/(N − 1). In fact, the microswimmers can handle even a fraction of ≈50% blocked links while maintaining ≥50% of their unaffected swimming speed.

[PAGE 9] Thus, our evolved navigation policies of the proposed microswimmer system not only show strong resilience against partly significant morphological changes of the swimmer's body (see also Fig. 4), but even against functional alterations and failures of single or multiple actuators (c.f., blocked arms and links in Figs. 6 and 7). Moreover, the decentralized control paradigm in our microswimmer system is tolerant against various sources of noise, e.g., in the predicted action outputs, in the beads' input perceptions, and in the presence of thermal noise added to the equations of motion, as detailed in the Supplementary Note 2b-d, respectively. In the former two cases, efficient locomotion is still possible for noise-to-signal ratios of 50% or even more. In the latter case, we add additive noise with diffusivity D, which allows for locomotion until Pe⁻¹ = D/D0 = kBT/(2F0R) ~0.1 with D0 = Rv0, i.e., down to Péclet numbers Pe of ~O(10¹), therefore in the range of real microswimmer systems. We emphasize that this goes well beyond what the swimmers experienced during training and is a clear sign of generalizability and robustness via collective decision-making.

[PAGE 9] Conclusions

Our study demonstrates that machine learning of decentralized decision-making strategies of the distributed actuators in a composite in silico microswimmer can lead to highly efficient navigation policies of the entire organism that are, moreover, highly robust with respect to morphological changes or defects. More specifically, we treat each of the N beads of a generalized NG microswimmer model as an ANN-based agent that perceives information about its adjacent beads and whose actions induce activations of adjacent muscles. Via genetic algorithms, we have optimized such single-bead decision-making centers to collectively facilitate highly efficient swimming gaits on the system level of the NG swimmer.

In that way, we have