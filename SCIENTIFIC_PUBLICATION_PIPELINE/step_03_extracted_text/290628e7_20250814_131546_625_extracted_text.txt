[PAGE 1] Competition for finite resources as coordination mechanism for
morphogenesis: An evolutionary algorithm study of digital embryogeny

ABSTRACT
The standard view of embryogenesis is one of cooperation driven by the cells' shared genetics and evolutionary interests. However, numerous examples from developmental biology and agriculture reveal a surprising amount of competition among body cells, tissues, and organs for both metabolic and informational resources. To explain the existence of such competition we had hypothesized that evolution uses limiting "reservoirs" of resource molecules as a communication medium – a global scratchpad, to enable tissues across the body to coordinate growth. Here, we test this hypothesis via an evolutionary simulation of embryogeny in silico. Genomes encode state transition rules for cells, such as proliferation, differentiation, and resource use, enabling virtual embryos to develop a specific large-scale morphology. An evolutionary algorithm operates over the genomes, with fitness defined as a function of specific morphological requirements for the final embryo shape. We found that not only does such an algorithm rapidly discover rules for cellular behavior that reliably make embryos with specific anatomical properties, but that it discovers the strategy of using finite resources to coordinate development. Given the option of using finite or infinite reservoirs (which determine cells' ability to carry out specific actions), evolution preferentially uses finite reservoirs, which results in higher fitness and increased consistency (without needing direct selection for morphological invariance). We report aspects of anatomical, physiological/transcriptional, and genomic analysis of evolved virtual embryos that help understand how evolution can use competition among genetically identical subunits within a multicellular body to coordinate reliable, complex morphogenesis. Our results suggest that under some conditions, composite multi-scale systems will promote conflict and artificial scarcity for their components.


[PAGE 1] 1. Introduction
Multicellular bodies exhibit remarkable complexity of anatomical form. Control processes during embryogenesis and organ regeneration must coordinate cellular behaviors such as proliferation, differentiation, migration, and apoptosis in order to reliably build bodies with specific structure and function. Evolutionary dynamics and generic laws of morphogenesis are responsible for embryonic development's robustness and ability to result in emergent morphologies with high fitness (Eldar et al., 2004; Newman and Comper, 1990). This remarkable process enables competent individual subunits (cells), which were independent organisms in our evolutionary past, to cooperate toward large-scale anatomical outcomes (Levin, 2019).

A major unknown in development and regeneration is how tissues and whole organisms can determine when to stop growth. When amputated, planarian flatworms or axolotls re-grow the missing structures and cease growth and remodeling when the correct anatomy is restored. In addition to growth limitation, the actual anatomical structure must be coordinated. This is a key unknown not only for understanding developmental biology but also for developing regenerative medicine approaches to restore bodies after injury, disease, or cancer (Pezzulo and Levin, 2015, 2016). Thus, it is important to construct models of dynamics that are sufficient for emergence of morphological coordination.

Cooperation among cells is typically explained by their identical genomes. Bound by shared genetics and survival interests, it is typically thought that cells within a single body should be highly cooperative in their mission to build or repair an organism (Godfrey-Smith, 2013).


[PAGE 2] However, "genomes are not a blueprint for anatomy" and these processes also rely on chemicals, electrical signaling, and mechanical processes to ensure the emergence of correct anatomy in embryogenesis. Growth requires energy from fuel (which is necessarily limited) and is governed by the dynamics of informational signaling molecules (which can be produced in arbitrary quantities by cells) (Briscoe and Small, 2015; Song and Shvartsman, 2020). Development is the process of distributing energy and signals appropriately so as to reach a specific, coherent target morphology (Gawne et al., 2020; Pezzulo and Levin, 2016). However, a surprising amount of competition is found within single organisms (reviewed in (Gawne et al., 2020; Heams, 2012; Queller, 2011; Wagensberg et al., 2010)). This has been observed across taxa, in the context of developmental biology and agricultural research. Specifically, organs, tissues, and cells compete for limiting molecules, including metabolic resources and informational signals such as growth factors and other instructive morphogens.

Competition between developmental structures relates to how the rate and timing of one body part's growth can alter the store of metabolic and informational resources that are used to coordinate growth in other parts of the body (Gawne et al., 2020). The classic example of this type of competition is the demonstration that removing a tomato plant's fruits often produces an increase in its overall height (Gawne et al., 2020; Murneek, 1926). Another example is hypertrophy of the remaining sexual organ following hemi-castration, which has been documented in boars, rats, cows, pigs, sheep, rabbits, and catfish (Gawne et al., 2020; Goswami and Sundararaj, 1968; Hackenbruch, 1888; Klingenberg and Nijhout, 1998; Land and Carr, 1975; Mahadevaswami et al., 2000; Schanbacher et al., 1987). As in other tissues, each half, in a pair of sexual organs, competes for the same finite resources (revealed by the release of growth constraints observed when one of the pair is removed). Likewise, removing a butterfly's hindwings prior to pupation results in a significant increase in the size of the forewings (Gawne et al., 2020; Klingenberg and Nijhout, 1998; Nijhout and Emlen, 1998). Because resources are limited, their uptake from one area of the body likely influences growth in others. Finite metabolic and informational signals may take the form of amino acids, insulin, growth factors, ions, or systemic morphogens (Gawne et al., 2020; Nijhout and Emlen, 1998).

These competitive dynamics are surprising, given the expectation that genetically-identical cells in embryogenesis ought to cooperate optimally due to their shared interests – bodies are thought to be Darwinian individuals, competing amongst themselves but cooperating internally. How can the internal competition be explained? Gawne et al. (2020) hypothesized that evolution exploits cells' natural competitiveness to coordinate morphogenesis. Specifically, we suggested that reservoirs of resources can be used as global scratchpads - informational media that carries actionable intelligence about the growth state of distant cells. For example, when cells are dependent on an infinite-capacity (unlimited) resource to execute their behaviors, a cell or tissue is not informed about the state of the others because the reservoir carries no information (it doesn't change over time). In contrast, by polling a limiting (finite) resource, cells receive information on what the others are doing based on the state of the resource at any point in time. In this way, ancient cellular mechanisms of competition become co-opted as a communication and control system that in effect exploits limiting resources as a stigmergic information medium (Theraulaz and Bonabeau, 1999). This strategy is also used at higher scales, for example by swarm organisms such as ants, microbes, and even robots which use aspects of the environment to coordinate colony behaviors (Gloag et al., 2016; Heylighen, 2016; Hunt et al., 2019; Khuong et al., 2016).

Here, we sought to specifically test the hypothesis that evolution will discover how to use finite resources as a coordination mechanism for morphogenesis. We built a virtual embryo simulator, in which cell behaviors are guided by local rules defined in their genome, taking an agent-based, cellular automata approach as an example of Artificial Life (Adami, 1998; Bedau, 2005), akin to prior work in artificial embryogeny such as (Andersen et al., 2006, 2009; Gerlee et al., 2015, 2017). Our simulation is a minimal (2-dimensional) version of development, including representations of features of real morphogenesis including cell proliferation in a metabolic resource-dependent manner, cell differentiation into several tissue types, and fitness evaluation based on specific features of the resulting virtual embryo. We simulated evolution using a standard evolutionary algorithm approach (Fogel et al., 2000), which performed a cycle of mutation, embryogenesis, and selection based on anatomical criteria, to shape the content of each new generation based on the performance of embryogenesis in the past generation. Crucially, this evolutionary approach includes the all-important middle layer of developmental physiology that lies between genome and outcome: we use a generative encoding (in which the genomic information contains rules for emergent morphogenesis), not a direct mapping from genotype to phenotype.

In our simulations, embryos start as a single cell and divide repeatedly until they stop growing on their own; their genome determines the rules under which they produce various cell types and distribute them spatially. A population of initially-randomly generated embryos evolve for thousands of generations until they meet specified fitness criteria. We set target sizes, shapes, and compositions for the embryos (the fitness criteria guiding the evolutionary process). The virtual embryos' genomes included the ability to reference two types of different resource molecules, as prerequisites to action: infinite capacity reservoirs, which never reduce and always allow the cell to take an action according to the relevant rule; and finite capacity reservoirs, which eventually deplete and block cell activity that depends on that reservoir. We provided no pressure against profligate use of reservoir resources, to avoid biasing the system toward limited reservoirs.

We studied the dynamics of evolution under these conditions and found several fundamental patterns. First, evolutionary dynamics are sufficient to rapidly evolve genomic rules with desired anatomical features, such as bodies with specific aspect ratios, limited size, and spatially differentiated anatomical structures at the "tissue" level. Second, evolution discovered how to use finite reservoirs to help coordinate this process, establishing artificial scarcity and competition (despite any penalty for metabolic cost of development) to ensure emergence of consistent large-scale morphologies with high fitness. We use a number of tools to analyze the genomic, transcriptomic/physiological, and morphological dynamics of the resulting highly-fit embryos to gain insight into how this works. Our loss-of-function and genomic editing experiments in silico reveal that evolution is exploiting regulatory mechanisms more than structural change, shaping the ways in which even a small number of finite-reservoir genes can be efficiently used to control growth and form.


[PAGE 3] 2. Methods

[PAGE 3] 2.1. Virtual embryos' development
An embryo starts as a single stem cell in the center of a two-dimensional grid. To begin each step of their discretely timed embryogenesis, each stem cell queries the genome, which dictates how they can divide. The genome is represented by a lookup table, with individual genes encoding rules for how stem cells divide (asymmetrically), and where they place their progeny, based on the state of the microenvironment of each cell (number of stem cell (black), interstitial cell (green), and nerve cell (red) neighbors) and the state of various metabolic resources (maintained as global reservoirs of finite or infinite capacity). Note that the names "interstitial" and "nerve" are purely symbolic (reminiscent of the two cell types found in the primitive Hydra model system), to allow convenient reference to two mature (terminally-differentiated) cell types. The order of stem cell activity is random (simulating the physiological noise of parallel activity of cells in vivo), which provides a stochastic component to development. The genomic lookup table maps every combination of microenvironment inputs (possible neighbor counts) to a unique output, for a given cell type. A query to the lookup table provides the specifications for the new daughter cell and the parent cell's new reservoirs.

Each embryo may have a genome that refers to finite and infinite reservoirs. While each gene contains alleles that specify whether a cell uses an infinite or finite reservoir, the reservoir itself is global (a common pool of molecules available to all cells in the tissue). The initial finite reservoir is set to a value between zero and 600, allowing evolution to also choose the capacity of finite reservoirs (in addition to choosing between them and infinite-capacity ones). For a stem cell to create a daughter cell, it must consume one unit of fuel from the reservoir that it is currently using. Crucially, a stem cell cannot divide if it is using a depleted finite reservoir. Because an infinite reservoir will never deplete, it never blocks division for cells whose genomes refer to it.

The specifications for the new daughter cell include the directional bias for where to place the daughter in relation to the parent, the type of the daughter cell (stem, interstitial, or nerve), and the (finite or infinite) global reservoir that the daughter cell will use to determine its future activity. Thus, development here assumes the presence of a planar polarity signal in the tissue, enabling each stem cell to sense direction in 2 dimensions. The mature (differentiated) nerve and interstitial cells do not divide or consume reservoir fuel.

An embryo stops growing when none of the stem cells have a neighboring space to divide or when the remaining stem cells with space to divide are using finite reservoirs that have become depleted. After the embryo stops growth (development is complete), the adult form's fitness is calculated based on the fitness criteria. Then, the embryo is rerun a reruns_per_embryo (see hyperparameter table) number of times, with the same initial condition, and the mean fitness of all of the runs is the overall fitness score for the embryo; the range and standard deviation of all the fitness values across reruns of the same embryo is calculated as a measure of the robustness or consistency of the developmental process resulting from that embryo's genome.


[PAGE 3] 2.2. Evolutionary wrapper
Each embryo's development takes place within an overall evolutionary process (using hyperparameters shown in Table 1). In the first generation a population_size number of embryos with randomly generated genomes is created; each input in the lookup table corresponds to a random output. The rest of each experiment consists of repeats of the following cycle. Each of these embryos in our simulator are run and each of their fitness scores are calculated. By chance, some of the randomly generated embryos will perform better than others. Once all the fitness scores for each of the embryos are calculated, population_size/survival_rate clones of each of the top embryos are generated to make sure that the population size stays the same in each generation.

Each of these embryos' genome or initial finite reservoir capacity are mutated before adding them to the next generation. The initial finite reservoir value is mutated at a rate of reservoir_mutation_percentage and each time it isn't, the lookup table is mutated. To mutate the initial finite reservoir capacity, our current initial reservoir capacity is randomly added to a value randomly selected from a normal distribution centered at zero (mu: 0, sigma: 50). This ensures that large jumps can occur, but smaller nudges are much more likely. To mutate the lookup table, we generate random outputs for mutation_rate percent of the inputs. Despite relying solely on random changes, evolutionary pressure crafts highly fit embryos by repeating this process over many generations.


[PAGE 3] 2.3. Calculating fitness
Fitness is calculated based on the genome's ability to produce an embryo close to a target size, with an overall shape bearing a specific aspect ratio, a cell composition that reflects a patterned primary axis (more red cells to the left of the embryo's midpoint and more green cells to the right), and growth within the allotted grid size. The following fitness functions were used as indicated in the Results:
Target size: Reaching a target_size number of total cells when growth stops.
sub_score = 50 - (50* abs((real_size / target_size) - 1))
Note that this is a Gaussian distribution. Therefore, a cluster with five cells greater than the target size will receive the same score as a cluster with five cells less than the target size. Any embryo that grows outside of the grid has its total score set to zero.
Aspect Ratio: Reaching a target width:height ratio when growth stops.
sub_score = 50- (50* abs((real_aspect_ratio / target_aspect_ratio) - 1))
This is also a Gaussian distribution. Therefore, a cluster with an aspect ratio above target_aspect_ratio receives the same score as a cluster with an aspect ratio equivalently below target_aspect_ratio (ex: 4:1 vs 6:1 if the target aspect ratio is 5:1). If the height of the embryo is greater than the height of the embryo at the midpoint, then the embryo's height minus the height at the midpoint is subtracted from sub_score (this was done to prevent the trivial solution of diagonally growing embryos achieving a 1:1 aspect ratio). If the width of the embryo is greater than the width of the embryo at the midpoint, then the embryo's width minus the width at the midpoint is subtracted from sub_score.
Head vs. Tail morphometrics: Encouraging nerve cells to grow to the left of the embryo's midpoint and interstitial cells to grow to the right of the embryo's midpoint.
sub_score = (25- (25* abs(left_interstitial_cell_count / left_nerve_cell_count /3)) + 25- (25* abs(right_nerve_cell_count / right_interstitial_cell_count / 3))) / 2


[PAGE 3] 2.4. Computational implementation
The simulations were built using the Python programming language. Each simulation was run on a single core in the Tufts High Performance Cluster. Code is available upon request.


[PAGE 3] 2.5. Computing statistics
All the statistics were computed using the permutation test as it is non-parametric and the comparison between distributions is non-paired.


[PAGE 4] 2.6. New analysis tools
Several specific tools were created to perform data analysis on our simulations as reported in Results:
1. Given a genome, it produces an image of the embryo and the reservoir usage after each step during development (Figs. 1 and 6).
2. Given simulation data, it produces images of the best embryo for every generation (Fig. 2).
3. Given simulation data, it plots the simulation's fitness over the generations (Figs. 2 and 7).
4. Given 3 sets of simulation data, it plots the mean fitness over the generations for each set (Figs. 3 and 7).
5. Given a set of simulations, it produces an image of the embryo from the last generation of the highest scoring simulation (Fig. 3).
6. Given 3 sets of simulation data, it produces a three-column dot plot where each column corresponds to one of the sets; each dot in each column represents the fitness achieved by the top genome in the last generation of each simulation (Fig. 3).
7. Given 3 sets of simulation data, it produces a three-column dot plot where each column corresponds to one of the sets; each dot in each column represents the number of generations it took for the simulation to surpass a given fitness threshold (Fig. 3).
8. Given a genome, it overlays repeated final developments of the embryo to visualize the genome's consistency in producing embryos (Fig. 4).
9. Given 3 sets of simulation data, it produces a three-column dot plot where each column corresponds to one of the sets; each dot in each column represents the standard deviation of 30 fitness scores, computed from rerunning the top genome from each simulation 30 times (Fig. 4).
10. Given a genome that evolved with access to a finite reservoir, it produces an image of the adult form of the embryo with and without access to finite reservoirs (Fig. 5).
11. Given a set of simulations that evolved with access to a finite reservoir, it produces a two-column dot plot that plots the original fitness of the top genome from each simulation and the fitness of the same genomes after forcing them to use only infinite reservoirs (Fig. 5).
12. Given a set of simulations, it plots the remaining finite fuel for the top genome from each simulation at the start and end of development (Fig. 6).
13. Given a set of simulations, it plots the reservoir capacity over the generations for the top genome from each simulation (Fig. 6).
14. Given a genome, it plots the finite and infinite usage over each step of development (Fig. 6).
15. Given a set of simulations, it plots the number of unique genes used by the top genome for each simulation at the start and end of evolution (Fig. 6).
16. Given a set of simulations, it plots the percent of finite alleles in the top agent's genome in the first generation and in the final generation for each simulation in the set (Fig. 7).
17. Given a set of simulations, it plots the mean percentage of finite usage during development over 5 repeats of the top agent in the first and final generation for each simulation in the set (Fig. 7).
18. Given a set of simulations, it plots the number of unique alleles for each simulation for the 5 genes with the lowest mean of unique alleles and the 5 genes with the highest mean of unique alleles (Fig. 7).
19. Given a simulation with a jump in fitness greater than 5 points within 500 generations, it produces an image of the top genome's embryo before the jump and after the jump (Fig. 7).
20. Given a set of simulations, it produces a single list containing every gene found in the top genome from each simulation and the corresponding percentage that each gene's allele uses a finite reservoir (Fig. 3).
21. Given a set of simulations, it produces a single list of containing every gene found in the top genome from each simulation and the corresponding percentage of times that each gene contributed to a jump in fitness (Fig. 3).
Note that the hyperparameters set when running these tools should be the same as the hyperparameters used while the simulation was running.


[PAGE 4] 3. Results

[PAGE 4] 3.1. Schematic of virtual embryogeny model
In order to examine the evolutionary implications of intra-embryonic competition, we constructed a simulation with the following components (Fig. 1). Each "embryo" is constructed from a single founder cell with a genome. Genomes contain information specifying all the cells' behavior as follows: what reservoir is used to determine whether it can divide, where to place the daughter cell, the daughter cell's type (stem, or the symbolic designations "nerve" or "interstitial"), and the reservoir that the daughter cell will draw from in its future decisions. Development was implemented as a discretely-timed process during which each cell acts in accordance with its rules (and its current microenvironment as input to the state table). The result of the development is a 2-dimensional configuration of cell positions and states. The genomes are modified across time by an evolutionary process operating over a population of individuals. Each generation consists of a set of individual embryos, each of which undergoes development independently from the others and is then evaluated by a fitness function which ranks them according to criteria of shape, size, and composition. Data are collected throughout the process and analyzed after the repeat simulations are complete. The state transitions are deterministic, but there is a stochastic element at both the embryo level (with respect to the order of cell behavior) and the evolutionary level (because mutations are randomly executed).

Here, we focus on a specific component of this process: the evolution-driven changes to the dependence of the embryos on finite resources – reservoirs of molecules which permit specific cell actions and are decremented each time such an action is taken (like a limited pool of metabolic or informational molecules). The starting capacity of finite reservoirs is determined by the genome (it is evolvable), and they do not get replenished during development. It is important to note that our simulation is not focused on metabolic resources (which are often externally limiting) but mimics the use of informational resources, such as trophic signals or hormones, which in principle could be churned out in non-limiting amounts by cells but in biological systems are often present in small quantities for which cells compete (Gawne et al., 2020).

We tracked the developmental and evolutionary usage dynamics of finite and infinite reservoirs within populations, and then analyzed the genomic and physiological processes that the resulting high-fitness individuals were using to accomplish their morphogenetic outcomes.


[PAGE 5] 3.2. Embryonic strategies using finite reservoirs are better at morphogenesis
We performed evolutionary simulations to identify strategies that optimally solved a problem of morphogenesis (see Table 1): produce an embryo close to a target size, with an overall shape bearing a specific aspect ratio, and cell composition that reflects a patterned primary axis (more red cells to the left of the embryo’s midpoint and more green cells to the right). Evolution was able to choose whether, and how, to use finite or infinite resources to guide cell behavior. We specifically did not include any metabolic penalty on resource usage, to isolate one variable: even when resources cost nothing, would evolution prefer to limit them, forcing embryonic cells to compete?

We first ran three sets of 100 evolutionary simulations (Figs. 2 and 3). With respect to the control of cell functions, the first set was locked to use only infinite reservoirs (no competition for resources); the second set had access to only finite reservoirs, and the third allowed mutation to make genomes that refer to both infinite and finite reservoirs (essentially allowing these strategies to compete). Fig. 2A-C shows representative simulations from each of the sets. We found that the infinite-only simulations (Fig. 2A) tended to reach a lower final fitness and demonstrated much higher variability in its fitness from each generation to the next compared to the finite-only (Fig. 2B) and the infinite-and-finite, or "mixed model" (Fig. 2C) simulations. The simulations with access to finite reservoirs commonly displayed clear jumps in fitness over a few generations when evolution discovered an improved strategy. This rarely happened for the infinite-only simulations. Fig. 3 illustrates that the average fitness scores for the set of mixed-model simulations was 23% greater than the infinite-only set. The mixed-model simulations initially scored lower on average than the only-finite set; however, the two sets' average scores converged throughout the course of evolution (Fig. 3A). Despite the mixed-model set performing better on average compared to the infinite-only set, the infinite-only simulations' final fitness values range from 96.99 to 134.74 while the mixed-model simulations' final fitness values range from 121.07 to 146.65. Therefore, the infinite-only simulations can outperform the mixed-model simulations in a few cases. This indicates that finite reservoirs are not the only possible solution for this problem.

Simulations with only infinite reservoirs frequently evolve to stop growth by trapping the stem cells with a layer of differentiated cells. We also observed that the average number of generations that the infinite-only set of simulations took to surpass 80% of the max fitness was 4310.2 generations greater than the sets of simulations with access to finite reservoirs. Therefore, we conclude that evolutionary simulations with access to finite reservoirs produce embryos with significantly (p-value: 9.99e-06) higher fitness values after 7500 generations and achieve a high fitness in many fewer (p-value: 9.09e-06) generations than simulations using only infinite reservoirs.


[PAGE 7] 3.3. Without rewarding for developmental consistency directly, finite reservoirs enable developmental consistency
Since development includes stochastic components, repeat runs of the same genome do not necessarily produce identical embryos; however, biological embryogenesis is generally highly invariant to a specific target morphology (and thus overall fitness). Thus, we next sought to test whether simulations using finite reservoirs produce genomes that develop more consistently-shaped embryos than simulations using only infinite reservoirs. We took the best embryos' final genomes from each of the 100 simulations in the infinite-and-finite (mixed model) set and reran them 30 times each, to find the standard deviations of their fitness scores. We observed (Fig. 4C) that the set of genomes from the set that had access to only infinite reservoirs had significantly higher (p-value: 9.99e-6, permutation test) standard deviations on average, revealing that there was much less consistency amongst embryos compared to those arising from genomes with access to finite reservoirs. Therefore, we conclude that simulations of stochastic developmental processes with access to finite reservoirs evolve genomes that produce embryos with more consistent fitness values.


[PAGE 8] 3.4. Successful individuals' morphogenesis depends on finite reservoirs
Given the prevalence of evolved genomes that use finite reservoirs, we next sought to directly test whether the resulting high-fitness individuals functionally rely on this property to achieve their successful morphogenetic outcomes. We took the best individuals from the last generation of each simulation in the mixed model set and edited their genome to remove access to finite reservoirs (Fig. 5A). This is a standard "loss-of-function" experiment in developmental genetics, enabling experimental tests of the function of specific genetic features. We observed (Fig. 5C) that every such embryo (out of 100) exhibited uncontrolled growth and therefore grew outside of the available grid space,


[PAGE 9] Fig. 5. Successful individuals depend on finite reservoirs.
(A) Genomes evolved with access to finite reservoirs were forced to undergo development with only infinite reservoirs, in a virtual "genomic editing" gain-of-function experiment. (B) Examples of single individuals (from evolutionary runs in which genomes are allowed to reference finite reservoirs) at the end of their embryogenesis, showing good fitness according to the criteria of a size of 400 total cells, an aspect ratio of 5:1, and an embryo midpoint split of nerve (red) and interstitial (green) cells. (B') When their genomes are altered to instead refer to only infinite reservoirs, their patterns are very different, showing that their specific morphogenesis depended on the limited nature of the finite reservoirs used by their genomes. (C) Across the infinite-and-finite simulations, the embryos' fitness drops to zero when forced to use only infinite reservoir. The blue and orange horizontal lines are the means of the group of dots with the corresponding color. The black slanted lines connect the scores for each individual, before and after they are forced to use only infinite reservoirs to develop (p-value: 9.99e-6). (C') Removing the fitness punishment for growth outside of the 2-dimensional grid still leads to an overall drop in fitness when forced to use infinite reservoirs only (p-value: 9.99e-6). (D) The drop in fitness resulting from genomic editing of individuals to replace finite reservoir genes with those referencing infinite reservoirs only is over 60% on average (with no border punishment), revealing the dependence of high-scoring individuals on the ability to use finite reservoirs. There are some genomes that had a comparatively small drop in fitness implying that they had less of a reliance on finite reservoirs to achieve a high fitness.


[PAGE 10] resulting in minimal fitness based on its lack of size control. We conclude that genomes that evolve to use finite reservoirs functionally rely on this property to achieve their high fitness score (i.e., the increased appearance of finite alleles during evolution is not simply an epiphenomenal byproduct of other forces but is actually required for optimal embryogenesis).
As is often done in developmental biology to analyze an otherwise embryonic lethal phenotype, we sought to artificially enable embryos to be scored for fitness despite their abnormal growth, to analyze how other aspects of embryogenesis may rely on reservoir properties. Interestingly, when growth was artificially stopped at the borders in embryos forced to use infinite-only reservoirs, some embryos achieved reasonable fitness scores (9 embryos had a fitness score above 100), suggesting that a large component of the benefit of finite reservoirs is specifically size control (Fig. 5C'-D).

[PAGE 10] 3.5. Successful Individuals Have Different Strategies for How They Use Finite Reservoirs
To understand how finite reservoirs create successful embryos, we investigated how evolution calibrates reservoir capacity in infinite-and-finite (mixed model) contexts, and how embryos use their reservoirs during development (Fig. 6); this is the artificial embryogeny equivalent of analyzing the transcriptomic or physiological processes underlying development. First, we found that all the top genomes from the simulation deplete their finite reservoirs by the end of development (Fig. 6A). This confirms that the simulations have evolved genomes that utilize the stopping power provided by finite reservoirs to create highly fit embryos. Moreover, we found that the evolved values of initial reservoir capacities do not approach 399 (embryo target size of 400 minus the first egg cell) as we expected (Fig. 6B), showing that finite reservoirs can be used to coordinate growth in ways other than simply decrementing once for each cell to be produced.
Initially, we hypothesized that the genomes would rely entirely on finite reservoirs and evolution would set their capacity to 399 to consistently reach their target growth (embryos consisting of ~400 cells). However, the top genomes from the mixed model set of simulations have a mean reservoir capacity of 240.93 with a standard deviation of 43.18. To understand how the mixed-reservoir genomes were able to stop growth at the correct target size despite their unintuitive initial reservoir capacities, we analyzed their reservoir usage throughout the development of their embryos (Fig. 6C-E). We found a variety of strategies ranging from harmonic growth with arms that leave only one stem cell exposed at a time to a majority reliance on finite reservoirs. We concluded that there are a variety of different strategies that use finite reservoirs to successfully meet the fitness criteria.

[PAGE 10] 3.6. How evolution solves the coordination problem: genomic analysis
Development consists of a rich layer of interactions downstream of genetic information. Thus, morphogenetic outcomes relying on limited resource use can be modified by evolution in two ways: by increasing the number of genes referring to finite reservoirs, and/or by changing other genes that cause these same finite reservoir genes to be expressed in novel ways (mirroring the distinction between structural genes and regulatory/epigenetic mechanisms in biological evolution (Rosati and McKinnon, 2009; Tangwancharoen et al., 2018)).
To determine whether evolution would increase the frequency of finite alleles in the genome, we calculated the ratio of finite alleles found in populations before and after evolution. In a set of simulations where


[PAGE 11] the graphs illustrate the change in morphology due to a jump in fitness of at least 5 points (see Table 4).

[PAGE 12] all the genomes started with only 5% finite alleles in the first generation, but were free to fluctuate under evolutionary dynamics, the ratio of finite alleles in the genome barely increased (0.1%) after 2500 generations, despite the observed rise in fitness (Fig. 7A). However, the usage (equivalent to a transcriptomic analysis) of finite reservoirs during development rose from 5% in the first generation to almost 15% in the final generation (p-value: 9.99e-6) (Fig. 7B). Despite the tendency not to increase the prevalence of finite alleles in the genomes, evolution does produce genomes that use genes with finite alleles at higher rates during development. As the capacity for finite alleles in the genome increases, the transcriptome usage during development increases correspondingly. For finite allele ratio in the genome between 20% and 50%, the transcriptome usage during development approaches 60% (Table 2).
Thus, as in real development, genomic information does not tell the whole story: it is essential to ask how the genes are being used during embryogenesis. We found that evolution increasingly relies on finite reservoirs not by expanding these genes, but by modifying when and how they are used by embryos (i.e., at the transcriptional control level).
To further understand the developmental strategies used by evolution to produce highly fit embryos, we next sought to analyze further the importance of specific genes to the rises in fitness we observed during evolution (Fig. 7C). We chose allele turnover, the frequency in which a gene in the top agent's genome successfully mutates its allele (See Methods), as a gauge for measuring the impact of specific genes on morphogenesis. The 5 genes with the least allele turnover in the set of mixed-model simulations had a mean of 255.28 unique alleles with a standard deviation of 280.6, while the 5 genes with the most allele turnover had a mean of 1558.72 unique alleles with a standard deviation of 14.1. Moreover, Table 3 demonstrates that the five genes with the lowest turnover are also the genes that evolution is most likely (mean of 35.2%) to assign a finite allele and the five genes with the most turnover are the least likely (mean of 1.6%). Additionally, Table 3 highlights that the five genes with the lowest allele turnover are likely to contribute to jumps in fitness (mean of 48.6%) whereas genes with the highest allele turnover (mean of 1.8%) rarely contribute to jumps in fitness. Therefore, we conclude that high impact genes take on most of the responsibility to achieve high fitness.
To determine just how efficiently evolution could use a small number of finite alleles (and further distinguish structural from regulatory change in evolution as a contributor to the rise in fitness), we ran sets of simulations where we artificially capped the number of finite alleles that were allowed in any genome (Fig. 7D). Initially, the set of simulations with finite alleles capped at 5% had an average fitness comparable to the infinite-only set; however, after 2500 generations the average fitness was 21 points above the infinite-only set and only 5 points below the mixed-model set. The 5% capped simulations also developed a reliance on finite reservoirs, as their fitness drops precipitously when their finite reservoirs are removed (Supplemental